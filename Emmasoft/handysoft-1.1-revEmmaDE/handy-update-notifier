#!/usr/bin/env python
# -*- coding:Utf-8 -*- 
# Fichier: update-notifier-handylinux.py
# Cree le 26 mai 2015 22:53:30


"""

Auteur :      coyotus, thuban 
licence :     GNU General Public Licence

Description :
	Liste le nombre de mises à jour disponibles
	Affiche une notification
	Invite à réaliser la mise à jour
"""

from gi.repository import Gtk, Notify
import sys
import os
import locale
import apt

def count_upgradeables_pkg():
	n = 0
	cache=apt.Cache()
	cache.open(None)
	for i in cache:
		if i.is_upgradable:
			n += 1
	return(n)


LOCALE = locale.setlocale(locale.LC_ALL, "")[0:2] # 'fr' or 'en'
NUMOFUPDATE = count_upgradeables_pkg()

if LOCALE == 'fr':
	LANG = 0
else:
	LANG = 1

if NUMOFUPDATE == 0:
	quit()

class language:  
        if NUMOFUPDATE == 1:
            NUMBER_UPDATE_LABEL=[" mise à jour disponible"," update available"]
        else:
            NUMBER_UPDATE_LABEL=[" mises à jour disponibles"," updates available"]
	CANCEL_BUTTON=["Annuler","Cancel"]
	UPDATE_BUTTON=["Mettre à jour","Update"]

def ignore_cb(n, action):
	assert action == "cancel"
	print "Abort"
	n.close()
	Gtk.main_quit()

def default_cb(n, action):
	assert action == "default"
        os.system('gksudo handy-upgrade-manager')
	n.close()
	Gtk.main_quit()

if __name__ == '__main__':
        n = Notify.init("handy-update-notifier")
        n = Notify.Notification.new(str(NUMOFUPDATE), language.NUMBER_UPDATE_LABEL[LANG], \
                "/usr/share/pixmaps/handy-update-checker.png")

	n.set_timeout(Notify.EXPIRES_NEVER)
	n.add_action("cancel", language.CANCEL_BUTTON[LANG], ignore_cb)
	n.add_action("default", language.UPDATE_BUTTON[LANG], default_cb)

	if not n.show():
            print("Failed to send notification")
            sys.exit(1)

	Gtk.main()
